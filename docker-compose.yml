version: '3.3'

volumes:
  nginx-conf:
  nginx-certs:
  nginx-dhparam:
  nginx-vhost:
  nginx-html:
  share:
  postgis-backups:
  geoserver-data:
  postgis-data:
  #mysql-data:
  #wordpress-html:
  shiny-apps:
  erddap-data:
  erddap-config:

services:

  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy
    env_file: .env
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true" # Label needed for Let's Encrypt companion container
    environment:
      DEFAULT_HOST: www.$HOST
      VIRTUAL_HOST_SPECIFIC_PORT: 'true'
      VIRTUAL_PROTO: https
      VIRTUAL_PORT: 443
      DHPARAM_GENERATION: 'false'
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./nginx-proxy/nginx.tmpl:/app/nginx.tmpl:ro"
      - "nginx-conf:/etc/nginx/conf.d"
      - "nginx-certs:/etc/nginx/certs:ro"
      - "nginx-dhparam:/etc/nginx/dhparam"
      - "nginx-vhost:/etc/nginx/vhost.d"
      - "nginx-html:/usr/share/nginx/html"
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443

  # https://cloud.google.com/community/tutorials/nginx-reverse-proxy-docker
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    container_name: letsencrypt-nginx-proxy-companion
    environment:
      DEFAULT_EMAIL: 'ben@ecoquants.com' 
    volumes:
     - "/var/run/docker.sock:/var/run/docker.sock:ro"
     - "nginx-conf:/etc/nginx/conf.d"
     - "nginx-certs:/etc/nginx/certs:rw"
     - "nginx-dhparam:/etc/nginx/dhparam"
     - "nginx-vhost:/etc/nginx/vhost.d"
     - "nginx-html:/usr/share/nginx/html"
    # Make sure we start nginx proxy container first
    depends_on: 
     - nginx-proxy

  postgis:
    container_name: postgis
    image: kartoza/postgis:11.0-2.5
    environment:
      POSTGRES_DBNAME: gis
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: $PASSWORD
    volumes:
      - postgis-data:/var/lib/postgresql
      - share:/share      
    restart: unless-stopped
    healthcheck:
      test: 'exit 0'
    ports:
      - 5432:5432
    depends_on: 
     - nginx-proxy
     
  postgis-backup:
    container_name: postgis-backup
    image: kartoza/pg-backup:11.0
    volumes:
      - postgis-backups:/backups
      - share:/share      
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: gis
      POSTGRES_USER: admin
      POSTGRES_PASS: $PASSWORD
      DUMPPREFIX: PG_gis
    restart: unless-stopped
    depends_on:
      - postgis

  geoserver:
    container_name: geoserver
    image: kartoza/geoserver:2.15.2
    environment:
      VIRTUAL_HOST: gs.$HOST
      LETSENCRYPT_HOST: gs.$HOST
      USERNAME: admin
      PASS: $PASSWORD
      GEOSERVER_ADMIN_PASSWORD: $PASSWORD
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
      - share:/share
    ports:
      - 8888:8080
    restart: unless-stopped
    depends_on:
      - postgis
    healthcheck:
      test: curl --fail -s http://localhost:8888/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    depends_on:
     - nginx-proxy

  # mysql:
  #   container_name: mysql
  #   image: mysql:8.0.18
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_ROOT_PASSWORD: $PASSWORD
  #     MYSQL_DATABASE: wordpress
  #     MYSQL_USER: admin
  #     MYSQL_PASSWORD: $PASSWORD
  #   ports:
  #     - 3306:3306

  # wordpress:
  #   container_name: wordpress
  #   depends_on:
  #     - mysql
  #   image: wordpress:php7.4-apache
  #   ports:
  #     - 8000:80
  #   volumes:
  #     - wordpress-html:/var/www/html
  #   restart: unless-stopped
  #   environment:
  #     VIRTUAL_HOST: wp.$HOST
  #     WORDPRESS_DB_HOST: mysql:3306
  #     WORDPRESS_DB_USER: admin
  #     WORDPRESS_DB_PASSWORD: $PASSWORD
  #     WORDPRESS_DB_NAME: wordpress
  
  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - share:/share
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: www.$HOST
      LETSENCRYPT_HOST: $HOST,www.$HOST
      LETSENCRYPT_EMAIL: ben@ecoquants.com
    ports:
      - 8088:80
    depends_on: 
     - nginx-proxy

  rstudio-shiny:
    container_name: rstudio-shiny
    build: ./rstudio-shiny
    image: bdbest/rstudio-shiny:s4w
    volumes:
      - shiny-apps:/srv/shiny-server
      - share:/share
    entrypoint: sh /docker-start.sh
    restart: unless-stopped
    environment:
      # [Running virtual hosts on different ports of the same container · Issue #560 · jwilder/nginx-proxy](https://github.com/jwilder/nginx-proxy/issues/560)
      VIRTUAL_HOST: "rstudio.$HOST:8787,shiny.$HOST:3838,api.$HOST:8000"
      LETSENCRYPT_HOST: "rstudio.$HOST,shiny.$HOST,api.$HOST"
      ROOT: 'true'
      USER: admin
      PASSWORD: $PASSWORD
    ports:
      - 8787:8787
      - 3838:3838
      - 8000:8000
    depends_on: 
     - nginx-proxy

  # docker run -d -p 8080:8080 --name erddap axiom/docker-erddap
  erddap:
    container_name: erddap
    build: ./erddap
    volumes:
     - erddap-data:/erddapData
     - erddap-config:/usr/local/tomcat/content/erddap
     - share:/share     
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: erddap.$HOST
      LETSENCRYPT_HOST: erddap.$HOST
    ports:
      - 8080:8080
    depends_on: 
     - nginx-proxy
      
 # sudo docker exec -it erddap bash -c "cd /usr/local/tomcat/webapps/erddap/WEB-INF && bash GenerateDatasetsXml.sh -verbose"
  